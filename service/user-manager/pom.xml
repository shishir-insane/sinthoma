<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sk.sinthoma</groupId>
		<artifactId>sinthoma-service-base</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../sinthoma-service-base</relativePath>
	</parent>
	<artifactId>user-manager</artifactId>
	<name>user-manager</name>
	<description>User Manager Microservice</description>
	
	<properties>
		<sqlite4java.version>1.0.392</sqlite4java.version>
		<dynamodblocal.version>1.11.86</dynamodblocal.version>
        <dynamodblocal.repository.url>https://s3-us-west-2.amazonaws.com/dynamodb-local/release</dynamodblocal.repository.url>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-dynamodb</artifactId>
			<version>${com.amazonnews.dynamodb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.derjust</groupId>
			<artifactId>spring-data-dynamodb</artifactId>
			<version>${spring.data.dynamodb.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java8</artifactId>
			<version>${io.cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${io.cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${io.cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>DynamoDBLocal</artifactId>
			<version>${dynamodblocal.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.almworks.sqlite4java</groupId>
			<artifactId>sqlite4java</artifactId>
			<version>${sqlite4java.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.almworks.sqlite4java</groupId>
			<artifactId>sqlite4java-win32-x86</artifactId>
			<version>${sqlite4java.version}</version>
			<type>dll</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.almworks.sqlite4java</groupId>
			<artifactId>sqlite4java-win32-x64</artifactId>
			<version>${sqlite4java.version}</version>
			<type>dll</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.almworks.sqlite4java</groupId>
			<artifactId>libsqlite4java-osx</artifactId>
			<version>${sqlite4java.version}</version>
			<type>dylib</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.almworks.sqlite4java</groupId>
			<artifactId>libsqlite4java-linux-i386</artifactId>
			<version>${sqlite4java.version}</version>
			<type>so</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.almworks.sqlite4java</groupId>
			<artifactId>libsqlite4java-linux-amd64</artifactId>
			<version>${sqlite4java.version}</version>
			<type>so</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>package</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<version>${project.version}</version>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>${docker.image.repo}/${project.artifactId}</repository>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-extension</artifactId>
				<version>${dockerfile-maven-version}</version>
			</extension>
		</extensions>
	</build>
	
	<repositories>
        <repository>
            <id>dynamodb-local</id>
            <name>DynamoDB Local Release Repository</name>
            <url>${dynamodblocal.repository.url}</url>
        </repository>
    </repositories>
</project>
